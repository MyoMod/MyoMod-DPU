#pragma once
#include <array>
#include <cstddef>


// An alias template for a two-dimensional std::array
template <typename T, std::size_t Row, std::size_t Col>
using Array2d = std::array<std::array<T, Col>, Row>;

// Rasmus
const Array2d<float, 6, 62> CONFIG_MVC_FFT_PERSON1 = {{{
    5.2376e-06, 7.7588e-06, 7.3445e-06, 4.7422e-06, 6.8844e-06, 
    9.3553e-06, 6.8569e-06, 8.3082e-06, 9.4062e-06, 5.9657e-06, 
    8.0609e-06, 6.2494e-06, 7.8066e-06, 7.4318e-06, 9.3078e-06, 
    1.1510e-05, 7.8342e-06, 5.7562e-06, 8.5260e-06, 1.0991e-05, 
    1.5110e-05, 9.5044e-06, 1.6937e-05, 1.1167e-05, 1.0527e-05, 
    1.1634e-05, 1.1865e-05, 9.9243e-06, 1.4534e-05, 1.0203e-05, 
    1.1305e-05, 1.5723e-05, 1.0833e-05, 7.6639e-06, 7.1888e-06, 
    7.2184e-06, 6.2086e-06, 9.0597e-06, 8.9122e-06, 4.1632e-06, 
    7.4687e-06, 1.0532e-05, 1.0540e-05, 8.7907e-06, 9.1329e-06, 
    1.2790e-05, 1.4486e-05, 1.1889e-05, 1.0083e-05, 1.0763e-05, 
    1.0569e-05, 8.9508e-06, 6.2807e-06, 7.8782e-06, 7.8493e-06, 
    6.1573e-06, 1.0585e-05, 1.1619e-05, 9.5317e-06, 8.3887e-06, 
    8.3616e-06, 1.2884e-05
},
{
    9.8552e-06, 7.8986e-06, 6.9537e-06, 7.9181e-06, 1.3618e-05, 
    1.3762e-05, 9.2250e-06, 3.9839e-06, 7.7227e-06, 1.3938e-05, 
    9.7005e-06, 5.1029e-06, 4.3593e-06, 5.4249e-06, 6.9262e-06, 
    7.7253e-06, 7.2717e-06, 1.3118e-05, 1.3789e-05, 9.3899e-06, 
    7.7244e-06, 1.1670e-05, 7.6163e-06, 6.3901e-06, 7.2412e-06, 
    6.6548e-06, 8.1089e-06, 9.5098e-06, 6.3215e-06, 5.8847e-06, 
    9.2071e-06, 1.5208e-05, 1.1267e-05, 1.2556e-05, 9.6579e-06, 
    5.1000e-06, 6.3781e-06, 8.9794e-06, 6.3867e-06, 5.5323e-06, 
    8.5631e-06, 5.3989e-06, 5.7842e-06, 5.8900e-06, 3.6910e-06, 
    3.6413e-06, 4.3883e-06, 5.1000e-06, 3.6807e-06, 4.3291e-06, 
    4.2809e-06, 4.1484e-06, 4.5665e-06, 5.8774e-06, 5.8703e-06, 
    3.8208e-06, 3.6114e-06, 3.0370e-06, 1.3961e-06, 1.3395e-06, 
    1.0417e-06, 1.3827e-06
},
{
    4.4096e-06, 6.4894e-06, 6.9460e-06, 6.8044e-06, 5.8604e-06, 
    7.5686e-06, 5.7901e-06, 4.5209e-06, 6.2119e-06, 6.4525e-06, 
    6.6853e-06, 5.1188e-06, 9.0422e-06, 1.2495e-05, 7.8875e-06, 
    1.0507e-05, 1.4618e-05, 9.3141e-06, 8.5671e-06, 1.0471e-05, 
    1.0284e-05, 7.3250e-06, 8.7959e-06, 7.3126e-06, 4.4714e-06, 
    6.7271e-06, 5.8494e-06, 4.4931e-06, 6.6893e-06, 8.3953e-06, 
    1.0441e-05, 7.2376e-06, 7.2366e-06, 8.9118e-06, 5.8912e-06, 
    5.9724e-06, 5.7691e-06, 4.0386e-06, 2.2551e-06, 3.9304e-06, 
    4.3361e-06, 3.1450e-06, 4.4855e-06, 5.3514e-06, 4.0448e-06, 
    2.5664e-06, 4.3247e-06, 3.9872e-06, 2.8981e-06, 4.9681e-06, 
    4.2489e-06, 3.6580e-06, 3.1315e-06, 4.9996e-06, 5.1970e-06, 
    3.4164e-06, 5.1642e-06, 4.5670e-06, 2.4228e-06, 3.4472e-06, 
    3.9501e-06, 2.7894e-06
},
{
    6.5415e-06, 1.0651e-05, 1.1426e-05, 8.7138e-06, 5.7002e-06, 
    7.3427e-06, 6.4538e-06, 6.5101e-06, 7.5027e-06, 1.2261e-05, 
    1.3168e-05, 1.0510e-05, 1.0603e-05, 1.0103e-05, 8.3022e-06, 
    5.6045e-06, 6.2380e-06, 8.8785e-06, 1.2690e-05, 9.4315e-06, 
    5.5947e-06, 6.5911e-06, 9.7575e-06, 1.3059e-05, 9.1116e-06, 
    4.6079e-06, 6.6057e-06, 1.3469e-05, 1.1047e-05, 5.9932e-06, 
    1.1064e-05, 1.2786e-05, 7.0659e-06, 5.9568e-06, 5.9745e-06, 
    6.7327e-06, 7.5910e-06, 6.9774e-06, 8.2019e-06, 8.3169e-06, 
    7.4494e-06, 5.8813e-06, 5.3950e-06, 5.5267e-06, 9.0251e-06, 
    7.5801e-06, 7.3662e-06, 8.7740e-06, 6.7082e-06, 3.6114e-06, 
    4.7834e-06, 8.8603e-06, 8.1711e-06, 3.0708e-06, 3.4138e-06, 
    6.2585e-06, 5.6350e-06, 4.2894e-06, 2.8575e-06, 3.6111e-06, 
    4.4702e-06, 3.8964e-06
},
{
    6.2089e-06, 6.5334e-06, 7.0057e-06, 1.0872e-05, 1.2455e-05, 
    1.2743e-05, 9.4154e-06, 1.2937e-05, 1.3202e-05, 1.3890e-05, 
    7.5275e-06, 7.9992e-06, 8.8332e-06, 7.0412e-06, 7.6114e-06, 
    5.4821e-06, 4.2014e-06, 4.4721e-06, 5.4838e-06, 5.4442e-06, 
    3.6292e-06, 2.6307e-06, 2.6624e-06, 9.1247e-06, 9.2413e-06, 
    5.9097e-06, 7.2398e-06, 1.0494e-05, 9.3146e-06, 1.1645e-05, 
    7.2410e-06, 4.6381e-06, 6.8091e-06, 7.1031e-06, 4.6025e-06, 
    6.4826e-06, 7.8412e-06, 1.0404e-05, 8.7263e-06, 6.4304e-06, 
    5.0699e-06, 7.0923e-06, 7.0991e-06, 6.4249e-06, 6.1684e-06, 
    4.9398e-06, 5.4178e-06, 6.9538e-06, 4.6222e-06, 3.8554e-06, 
    5.4421e-06, 4.4689e-06, 3.2011e-06, 4.3343e-06, 3.9835e-06, 
    5.1683e-06, 4.9005e-06, 3.7966e-06, 4.4641e-06, 3.6236e-06, 
    5.1019e-06, 5.3587e-06
},
{
    5.1512e-06, 5.5455e-06, 4.2504e-06, 5.6702e-06, 6.1049e-06, 
    4.9261e-06, 5.5013e-06, 5.2100e-06, 6.5489e-06, 5.9513e-06, 
    4.3888e-06, 5.0386e-06, 5.1138e-06, 6.6418e-06, 5.1912e-06, 
    4.3414e-06, 4.6676e-06, 5.4387e-06, 6.7032e-06, 9.1986e-06, 
    5.3997e-06, 2.7338e-06, 3.4875e-06, 4.8939e-06, 7.5597e-06, 
    5.5961e-06, 3.4643e-06, 5.0725e-06, 7.0467e-06, 4.2050e-06, 
    2.5782e-06, 5.1629e-06, 6.0440e-06, 5.1153e-06, 5.0359e-06, 
    4.8619e-06, 5.7423e-06, 4.8693e-06, 3.6349e-06, 4.4908e-06, 
    5.1071e-06, 4.3515e-06, 5.3890e-06, 6.2396e-06, 7.4155e-06, 
    3.9106e-06, 4.4257e-06, 5.5194e-06, 3.3922e-06, 4.8390e-06, 
    4.5850e-06, 3.4577e-06, 4.7556e-06, 3.3316e-06, 3.6593e-06, 
    6.6096e-06, 7.5976e-06, 5.0343e-06, 3.2235e-06, 3.6411e-06, 
    5.5998e-06, 7.2677e-06
}}};

//W0, W1, ..., Wn, b
const Array2d<float, 3, 7> CONFIG_COEF_PERSON1 = {{
   {-1.6803e-01, -1.6661e+00, 1.7658e-01, 2.4653e-01, 2.3578e-02, 9.4082e-01, 3.5667e-02}, 
   {8.6790e-04, -1.9412e-01, 4.2779e-01, -1.8457e+00, 7.6125e-01, -5.7946e-02, 8.4411e-03}, 
   {1.5774e+00, -1.7098e+00, -6.4302e-01, 2.1989e-01, -1.4113e-01, -1.4632e-01, 2.8810e-03}
}};